

import java.util.Arrays;

public class Lab_MatrixMul {
    public static void main(String[] args) {
        int[][] inputA = { { 5, 6, 7 }, { 4, 8, 9 } };
        int[][] inputB = { { 6, 4 }, { 5, 7 }, { 1, 1 } };
        MyData matA = new MyData(inputA);
        MyData matB = new MyData(inputB);
        int matC_r = matA.data.length;
        int matC_c = matB.data[0].length;
        MyData matC = new MyData(matC_r, matC_c);
        Thread matrixa = new Thread(new MatrixMulThread(0, 0, matA, matB, matC));
        matrixa.start();
        Thread matrixb = new Thread(new MatrixMulThread(0, 1, matA, matB, matC));
        matrixb.start();
        Thread matrixc = new Thread(new MatrixMulThread(1, 0, matA, matB, matC));
        matrixc.start();
        Thread matrixd = new Thread(new MatrixMulThread(1, 1, matA, matB, matC));
        matrixd.start();
        /*
         * Q4 construct 2D array for each "thread"
         * with respected to each cell in matC,
         * then start each thread
         */
        try {
            matrixa.join();
            matrixb.join();
            matrixc.join();
            matrixd.join();

        } catch (Exception e) {
            System.out.println(e);
        }
        // Q5 join each thread
        matC.show();
    }
}

class MatrixMulThread implements Runnable {
    int processing_row;
    int processing_col;
    MyData datA;
    MyData datB;
    MyData datC;

    MatrixMulThread(int tRow, int tCol,
            MyData a, MyData b, MyData c) {
        this.processing_row = tRow;
        this.processing_col = tCol;
        this.datA = a;
        this.datB = b;
        this.datC = c;

    }

    // Q1 code here

    /* Q2 */public void run() {
        // Q3
        int[][] temp = new int[2][2];
        if (processing_row == 0 && processing_col == 0) {

            for (int j = 0; j < 3; j++) {
                temp[0][0] += datA.data[0][j] * datB.data[j][0];
                datC.data[0][0] = temp[0][0];
            }

        } else if (processing_row == 0 && processing_col == 1) {
            for (int j = 0; j < 3; j++) {
                temp[0][1] += datA.data[0][j] * datB.data[j][1];
                datC.data[0][1] = temp[0][1];
            }
        } else if (processing_row == 1 && processing_col == 0) {
            for (int j = 0; j < 3; j++) {
                temp[1][0] += datA.data[1][j] * datB.data[j][0];
                datC.data[1][0] = temp[1][0];
            }
        } else if (processing_row == 1 && processing_col == 1) {
            for (int j = 0; j < 3; j++) {
                temp[1][1] += datA.data[1][j] * datB.data[j][1];
                datC.data[1][1] = temp[1][1];
            }
        }

        System.out.println("perform sum of multiplication of assigned row and col");
    }
}

// class
class MyData {
    int[][] data;

    MyData(int[][] m) {
        data = m;
    }

    MyData(int r, int c) {
        data = new int[r][c];
        for (int[] aRow : data)
            Arrays.fill(aRow, 9);
        // 9 will be overwritten anyway
    }

    void show() {
        System.out.println(Arrays.deepToString(data));
    }
}
